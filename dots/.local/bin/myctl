#!/usr/bin/env bash
#   __  __        ____ _____ _
#  |  \/  |_   _ / ___|_   _| |
#  | |\/| | | | | |     | | | |
#  | |  | | |_| | |___  | | | |___
#  |_|  |_|\__, |\____| |_| |_____|
#         |___/
#
#  MyDE Controller - Control various functions of MyDE


# ======================== Config ===========================

MYDE_DIR="$HOME/MyDE"
LIB_DIR="$HOME/.local/lib/myctl"
ROFI_CONF_DIR="$HOME/.config/rofi/conf"
KEYBINDS_FILE="$MYDE_DIR/wiki/docs/user-guide/keybinds.md"
LOG_LEVEL=$([[ "$ENV" == DEV ]] && echo 0 || echo 1)
MAX_VOLUME=153
MAX_MIC=$MAX_VOLUME

#========================== Main Logic =========================

export MYDE_DIR LIB_DIR ROFI_CONF_DIR KEYBINDS_FILE LOG_LEVEL THIS_PATH

THIS_PATH="$(realpath "${BASH_SOURCE[0]}")"

# Dictionaries for SubCommands
declare -A cmd_map

# shellcheck source=/dev/null
source "$LIB_DIR"/_utils.sh


[[ "$#" -eq 0 ]] && {
    self help
    exit 1
}

case "$1" in

    help|'-h'|--help)
        cmd_map=(
            [cmd]="myctl"
            [get]="Retrieve info about current system config."
            [reload]="Reload MyDE configuration"
            [set]="Set configuration options (not yet implemented)"
            [show]="Show various utility dialougs"
        )
        help_menu
        ;;

    # ==================== Get ====================
    get)
        shift # $1 = arg2
        case "$1" in
            help)
                cmd_map=(
                    [cmd]="get"
                    [desktop-file]="Get desktop file path of an application"
                    [desktop-filename]="Get desktop file name of an application"
                    [mic]="Get microphone/source volume"
                    [theme]="Get current theme of MyDE or specific components"
                    [volume]="Get speaker/sink volume"
                )
                help_menu
                ;;
            desktop-file)
                shift
                import_lib "get-desktop-file"
                get-desktop-file "$1"
                ;;
            desktop-filename)
                shift
                import_lib "get-desktop-file"
                get-desktop-file -n "$1"
                ;;
            cursor)
                shift
                case "$1" in
                    help)
                        cmd_map=(
                            [cmd]="get cursor"
                            [name]="get current cursor theme name."
                            [size]="get current cursor size."
                        )
                        help_menu
                        ;;
                    theme)
                        import_lib "gtk-utils"
                        get-gtk-cursor-theme
                        ;;
                    size)
                        import_lib "gtk-utils"
                        get-gtk-cursor-size
                        ;;
                    ""|*)
                        invld_cmd "$1" && self get cursor help
                        exit 1
                        ;;
                esac
                ;;
            mic)
                shift
                case "$1" in
                    help)
                        cmd_map=(
                            [cmd]="get mic"
                            [usage]="myctl get mic"
                        )
                        help_menu
                        ;;
                    mute)
                        import_lib "audio-utils"
                        get-mute -m
                        ;;
                    "")
                        import_lib "audio-utils"
                        get-volume -m
                        ;;
                    *)
                        invld_cmd "$1" && self get mic help
                        exit 1
                        ;;
                esac
                ;;
            theme)
                shift
                cmd_map=(
                    [cmd]="get theme"
                    [gtk]="get current gtk color theme."
                    [qt]="get current qt color theme. (not yet implemented)"
                    [rofi]="get current rofi color theme."
                )
                case "$1" in
                    help)
                        help_menu
                        ;;
                    rofi)
                        import_lib "rofi-utils"
                        get-rofi-theme
                        ;;
                    gtk)
                        import_lib "gtk-utils"
                        get-gtk-theme
                        ;;
                    qt|kde)
                        log.nyi   #TODO
                        ;;
                    ""|*)
                        invld_cmd "$1" && self get theme help
                        exit 1
                        ;;
                esac
                ;;
            volume)
                shift
                case "$1" in
                    help)
                        cmd_map=(
                            [cmd]="get volume"
                            [usage]="myctl get volume"
                        )
                        help_menu
                        ;;
                    mute)
                        import_lib "audio-utils"
                        get-mute
                        ;;
                    "")
                        import_lib "audio-utils"
                        get-volume
                        ;;
                    *)
                        invld_cmd "$1" && self get volume help
                        exit 1
                        ;;
                esac
                ;;
            ""|*)
                invld_cmd "$1" && self get help
                exit 1
                ;;
        esac
        ;;

    # ==================== reload ====================
    reload)
        shift
        case "$1" in
            help)
                cmd_map=(
                    [cmd]="reload"
                )
                help_menu
                ;;
            "")
                hyprctl reload > /dev/null
                log.success "myde configuration reloaded."
                ;;
            *)
                invld_cmd "$1" && self help
                exit 1
                ;;
        esac
        ;;

    # ==================== set ====================
    set)
        shift
        case "$1" in
            help)
                cmd_map=(
                    [cmd]="set"
                    [mic]="set microphone/source volume or mute"
                    [theme]="set theme for entire myde or specific components."
                    [volume]="set speaker/sink volume or mute"
                )
                help_menu
                ;;
            mic)
                shift
                case "$1" in
                    help)
                        cmd_map=(
                            [cmd]="set mic"
                            [usage]="myctl set mic [+|-]<level>"
                        )
                        help_menu
                        ;;
                    mute)
                      import_lib "audio-utils"
                      set-mute
                      ;;
                    unmute)
                      import_lib "audio-utils"
                      set-mute -m -u
                      ;;
                    toggle)
                      import_lib "audio-utils"
                      set-mute -m -t
                      ;;
                    "")
                        self set mic help
                        exit 1
                        ;;
                    *)
                        import_lib "audio-utils"
                        set-volume -m "$1"
                        ;;
                esac
                ;;
            theme)
                shift # $1 = arg3
                case "$1" in
                    help)
                        cmd_map=(
                            [cmd]="set theme"
                            [gtk]="set gtk color theme."
                            [rofi]="set rofi color theme."
                        )
                        help_menu
                        ;;
                    rofi)
                        shift
                        import_lib "rofi-utils"
                        set-rofi-theme "$1"
                        ;;
                    gtk)
                        shift
                        import_lib "gtk-utils"
                        set-gtk-theme "$1"
                        ;;
                    ""|*)
                        invld_cmd "$1" && self set theme help
                        exit 1
                        ;;
                esac
                ;;
            volume)
                shift
                case "$1" in
                    help)
                        cmd_map=(
                            [cmd]="set volume"
                            [usage]="myctl set volume [+|-]<level>"
                        )
                        help_menu
                        ;;
                    mute)
                      import_lib "audio-utils"
                      set-mute
                      ;;
                    unmute)
                      import_lib "audio-utils"
                      set-mute -u
                      ;;
                    toggle)
                      import_lib "audio-utils"
                      set-mute -t
                      ;;
                    "")
                      self set volume help
                      exit 1
                      ;;
                    *)
                      import_lib "audio-utils"
                      set-volume "$1"
                      ;;
                esac
                ;;
            ""|*)
                invld_cmd "$1" && self set help
                exit 1
                ;;
        esac
        ;;

    # ==================== show ====================
    show)
        shift
        case "$1" in
            help)
                cmd_map=(
                    [cmd]="show"
                    [keybinds]="Show keybinds hint window."
                    [powermenu]="Show power menu window."
                    [wobar]="Show wob osd bar"
                )
                help_menu
                ;;
            keybinds)
                import_lib "keybinds-menu"
                show-keybinds-menu -kf "$KEYBINDS_FILE" -t "$ROFI_CONF_DIR/keybinds-menu.rasi"
                ;;
            powermenu)
                import_lib "power-menu"
                show-power-menu -t "$ROFI_CONF_DIR/power-menu.rasi"
                ;;
            tui)
                shift
                cmd_map=(
                    [cmd]="show tui"
                    [usage]="myctl show tui [-t <task>] [-T <terminal>] [-c <class>] [-e <exec>]"
                    [-c, --class]="Application class for the terminal window"
                    [-e, --exec]="Command to run"
                    [-t, --term]="Terminal emulator to use (default: $TERMINAL)"
                )
                import_lib "tui-app"
                open-tui "$@"
                ;;
            wobar)
                shift
                cmd_map=(
                    [cmd]="show wobar"
                    [usage]="myctl show wobar <level>"
                )
                case "$1" in
                    help)
                        help_menu
                        exit 0
                        ;;
                    "")
                        invld_cmd && self show wobbar help
                        exit 1
                        ;;
                    *)
                        import_lib "wob-osd"
                        show-wob-osd "$1"
                        ;;
                esac
                ;;
            ""|*)
                invld_cmd "$1" && self show help
                exit 1
                ;;
        esac
        ;;

    # ==================== default ====================
    ""|*)
        invld_cmd "$1" && self help
        exit 1
        ;;
esac
